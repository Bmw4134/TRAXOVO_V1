# kaizen_sync_tester.py (Auto-Patch Mode)

import os
import re
from bs4 import BeautifulSoup

ROUTES_FILE = "routes/enhanced_weekly_report.py"
TEMPLATE_FILE = "templates/enhanced_weekly_report/dashboard.html"
BUTTON_LABEL = "Compare Processing Methods"
ROUTE_ENDPOINT = "/compare_processing_methods"
BUTTON_HTML = f'<a href="{ROUTE_ENDPOINT}" class="btn btn-success" style="margin-top: 20px;">🔍 {BUTTON_LABEL}</a>'


def check_route():
    print("🔍 Checking backend route...")
    if not os.path.exists(ROUTES_FILE):
        print("❌ Route file not found")
        return False
    with open(ROUTES_FILE, 'r') as f:
        content = f.read()
        if ROUTE_ENDPOINT in content:
            print("✅ Route is defined in backend")
            return True
        else:
            print("🚨 Route not found")
            return False


def check_and_patch_button():
    print("🔍 Checking UI button in dashboard...")
    if not os.path.exists(TEMPLATE_FILE):
        print("❌ Dashboard HTML not found")
        return False
    with open(TEMPLATE_FILE, 'r+') as f:
        html = f.read()
        soup = BeautifulSoup(html, 'html.parser')
        button = soup.find("a", string=lambda s: s and BUTTON_LABEL in s)
        if button:
            print("✅ Button exists in UI")
            return True
        else:
            print("🚨 Button missing — applying patch...")
            body = soup.find("body")
            if body:
                new_button = BeautifulSoup(BUTTON_HTML, 'html.parser')
                body.append(new_button)
                f.seek(0)
                f.write(str(soup))
                f.truncate()
                print("✅ Button injected into UI")
                return True
            else:
                print("❌ <body> tag not found. Cannot insert.")
                return False


def run_tests():
    print("\n📦 Running Kaizen Sync Tests + Auto-Patch")
    route_ok = check_route()
    button_ok = check_and_patch_button()
    if route_ok and button_ok:
        print("\n🟩 All systems in sync and patched.")
    else:
        print("\n🟥 Desync detected. Further manual review may be needed.")


if __name__ == "__main__":
    run_tests()
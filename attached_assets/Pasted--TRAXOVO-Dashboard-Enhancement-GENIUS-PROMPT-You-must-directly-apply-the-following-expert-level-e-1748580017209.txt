üöÄ TRAXOVO Dashboard Enhancement GENIUS PROMPT

You must directly apply the following expert-level enhancements explicitly to the TRAXOVO Flask dashboard project. Provide every detail clearly‚Äîcomplete code snippets, file locations, and ready-to-run commands. Make sure each section is fully fleshed-out and immediately actionable, avoiding partial or ambiguous instructions.

1Ô∏è‚É£ **Modular Flask Blueprint Setup**
- Clearly break down existing monolithic Flask routes into separate Flask Blueprints (e.g., `billing`, `attendance`, `maps`).
- Provide exact Blueprint registration snippets in `app.py` or the main app factory.
- Provide directory/file structure diagram explicitly.

2Ô∏è‚É£ **UI/UX Professional Polish**
- Integrate Bootstrap 5 CDN directly into HTML templates (provide complete snippet for base template).
- Explicit HTML/CSS snippets for standardized navbar, billing page, map page, and attendance views with responsive design.

3Ô∏è‚É£ **Secured Gauge API Integration**
- Explicitly provide Python snippet with proper SSL verification (`verify=True`), error handling (`try-except`), and logging for Gauge API data-fetching routes.
- Include exact pip installation command for any required missing dependencies.

4Ô∏è‚É£ **Database Schema & Query Optimization**
- Provide corrected SQLAlchemy ORM model definitions explicitly matching the database schema for `AttendanceRecord`, `Billing`, and `Asset` models.
- Provide precise SQLAlchemy query examples optimized for performance (include use of indexes, pagination, and secure parameterization).

5Ô∏è‚É£ **Flask Application Performance Enhancements**
- Explicit snippet integrating Flask-Caching with configuration suitable for caching high-cost queries and views.
- Snippet/example for optimized serving of static files (using CDN or browser caching headers).

6Ô∏è‚É£ **Security & Production Configuration**
- Provide direct Flask-Talisman snippet for adding security headers.
- Include explicit secure-cookie setup (using Flask-WTF or similar), clearly indicating exact placement in Flask app setup.

7Ô∏è‚É£ **Deployment & Archival Optimization**
- Provide explicit, ready-to-copy shell commands for safely archiving redundant directories (`logs/`, `dev_agents/`, `mocks/`, `backup/`, `temp_backup/`) safely without disrupting functionality.
- Clearly show commands ready for direct execution in Replit shell.

‚úÖ **Response Requirements:**
- All provided enhancements must be immediately copy-pastable.
- Include explicit file paths for each snippet or instruction.
- Ensure every snippet and command provided is explicitly non-destructive and stable.
- Avoid vague instructions: Every detail must be actionable on first attempt.

Execute these instructions now clearly structured for rapid deployment within my TRAXOVO dashboard project.
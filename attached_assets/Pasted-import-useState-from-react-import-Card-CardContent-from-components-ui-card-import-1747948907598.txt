import { useState } from 'react';
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Upload } from 'lucide-react';
import { motion } from 'framer-motion';

export default function FileUploader() {
  const [status, setStatus] = useState("Waiting for file...");
  const [results, setResults] = useState(null);

  const handleFileUpload = async (event) => {
    const file = event.target.files[0];
    if (!file) return;

    setStatus("Uploading and processing...");

    const formData = new FormData();
    formData.append("file", file);

    try {
      const response = await fetch("/upload", {
        method: "POST",
        body: formData,
      });
      const data = await response.json();
      setResults(data);
      setStatus("File processed successfully.");
    } catch (error) {
      setStatus("Error processing file: " + error.message);
    }
  };

  return (
    <div className="p-4 max-w-2xl mx-auto">
      <motion.div
        className="border-2 border-dashed border-gray-300 rounded-2xl p-6 text-center"
        initial={{ opacity: 0, y: -10 }}
        animate={{ opacity: 1, y: 0 }}
      >
        <Upload className="mx-auto mb-4" size={32} />
        <input
          type="file"
          accept=".csv,.xlsx"
          onChange={handleFileUpload}
          className="block mx-auto mb-4"
        />
        <p className="text-gray-500">Drag and drop a file or click to select.</p>
        <p className="text-sm text-blue-600 mt-2">{status}</p>
      </motion.div>

      {results && (
        <Card className="mt-6">
          <CardContent>
            <p className="text-green-600 font-bold mb-2">Classified Drivers: {results?.classified_count}</p>
            <p className="text-red-600 font-bold mb-2">Skipped Drivers: {results?.skipped_count}</p>
            <div className="mt-4">
              <h3 className="font-semibold">Skipped Reasons:</h3>
              <ul className="list-disc ml-6 text-sm text-gray-700">
                {results?.skipped?.map((item, idx) => (
                  <li key={idx}>{item.reason}</li>
                ))}
              </ul>
            </div>
          </CardContent>
        </Card>
      )}
    </div>
  );
}
